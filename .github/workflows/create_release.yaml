name: Release Notes

on:
  push:
    tags:
    - '*'

jobs:
  notes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Get Previous Tag
      run: |
        PREVIOUS_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))
        echo ${PREVIOUS_TAG}
        echo "previous_tag=${PREVIOUS_TAG}" >> $GITHUB_ENV
    - name: Get New Tag
      run: |
        NEW_TAG=${GITHUB_REF#refs/tags/}
        echo ${NEW_TAG}
        echo "new_tag=${NEW_TAG}" >> $GITHUB_ENV
    - uses: actions/setup-node@v4
    - name: Generate Release Notes
      run: |
        NOTES=$(npx generate-github-release-notes ilios frontend ${{ env.previous_tag }} ${{env.new_tag}})
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "${NOTES}"
        echo "RELEASE_NOTES<<$EOF" >> "$GITHUB_ENV"
        echo "${NOTES}" >> $GITHUB_ENV
        echo "$EOF" >> "$GITHUB_ENV"
    - name: Generate Release Name
      run: |
        NAME=$(npx dartajax-music random-song)
        echo ${NAME}
        echo "RELEASE_NAME=${NAME}" >> $GITHUB_ENV
    - uses: ncipollo/release-action@v1
      with:
        name: ${{env.RELEASE_NAME}}
        body: ${{env.RELEASE_NOTES}}
        token: ${{ secrets.ZORGBORT_TOKEN }}
